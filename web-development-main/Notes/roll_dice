//android_main.xml file
<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"// used for conceting libraries of android phone to app but till API 19
    xmlns:tools="http://schemas.android.com/tools" // pakage of tools that are very helpfull for the developer
    xmlns:app="http://schemas.android.com/apk/res-auto" // since android xmls is limited to API 19 thi amls helps to work the app till API 7
    android:layout_width="match_parent"
    android:layout_height="wrap_content"
    tools:context=".MainActivity"
    android:layout_gravity="center_vertical"
    android:orientation="vertical">

    <ImageView
    android:id="@+id/dice_image"
    android:layout_width="wrap_content"
    android:layout_height="wrap_content"
    android:layout_gravity="center_horizontal"
    tools:source="@drawable/dice_1" this will be only visible to the developer it helps for designing but erases when compiled
    app:srcCompat="@drawable/dice_1" />  // while using app xmls we need to use srcCompact to assign the source

    <Button
        android:id="@+id/roll_button"  // id is one of the most important aspect which diffrentiate the same parameteres.it should be unique for every funtion
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_gravity="center_horizontal"
        android:text="@string/roll" />

</LinearLayout>

// main kotline file
MainActivity.kt

package com.example.firstapp

import androidx.appcompat.app.AppCompatActivity
import android.os.Bundle
import android.widget.Button
import android.widget.ImageView
import android.widget.TextView
import android.widget.Toast
import java.util.*
import kotlin.random.Random as Random1

class MainActivity : AppCompatActivity() {
    lateinit var diceImage: ImageView // we can not directly assign any non-null thing before activity_main is run because it is the starting of the app, so to/
    //assign the variable before the activity file we need to us "Lateinit" by using this we promiss that after running actiity_main we will not leave it null we 
    //will assign some thing to the made var.

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_main)
        val rollButton: Button = findViewById(R.id.roll_button)// for using keys from the android_main xml file we need to first assign the function to a varible 
        //in.kt file and here the ID helps to connect 
        rollButton.setOnClickListener {// setOnClickListener makes the button futionable
            rollDice()    //just needto type the fuction name then press alt+Enter this will make the privated funtion
        }
        diceImage = findViewById(R.id.dice_image) // asssign the lateint var

        }
    private fun rollDice() {  //This is the private fuction when button with id roll_button is clicked it calls a fuction rollDice() and here is the code after that 
        val randomInt = Random().nextInt(6) + 1
        val diceImage: ImageView = findViewById(R.id.dice_image)
        val drawableResource = when (randomInt) {
            1 -> R.drawable.dice_1
            2 -> R.drawable.dice_2
            3 -> R.drawable.dice_3
            4 -> R.drawable.dice_4
            5 -> R.drawable.dice_5
            else -> R.drawable.dice_6
        }
        diceImage.setImageResource(drawableResource)
    }
}



/*Key things to remember:

////we use lateint for better an fast funtiong of app just like in line 70 and 56 rollDice is a nevr ending loopand when ever it will be clicked it will make new parametes putting new var in that will make new var. multiple times making bigger apps slow and bulky which leads to crash and lagging. 

///build.gradle file is one of the most important file it is the building block file here we need to add the jetpack pakage of android (also refferd as android x )
by adding "vectorDrawables.useSupportLibrary = true" this line to build.gradle file.(adding after "testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner" line is preferable)
by this only jetpack pakage will be activated
after adding the line to build.gradle file we need to add 
    xmlns:app="http://schemas.android.com/apk/res-auto"
    to android_main.xml file 
    NOTE: to use the pakage we need to use diffrent keys like
    app:srcCompat="@drawable/dice_1"

to get proper suggestion when the code shows error just go to the error click it and the press Alt+Enter.
*/
